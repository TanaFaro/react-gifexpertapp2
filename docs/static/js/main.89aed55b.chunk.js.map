{"version":3,"sources":["components/CategoryAdd.js","helpers/getGifs.js","components/GifGriditem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["CategoryAdd","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGriditem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","UseFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcC,OACG,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,MAInB,SACG,uBACCO,KAAK,OACLC,MAAQT,EACRU,SAjBkB,SAAEP,GACxBF,EAAgBE,EAAEQ,OAAOF,a,+BCFpBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIKA,EAAKC,OAJV,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcbM,GAda,4CAAH,sDCJPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAIjC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,kCAAMA,EAAN,WCJCO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAGvB,ECHyB,SAAEA,GAE1B,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAoBA,OAfAC,qBAAW,WAEPxB,EAASC,GACJwB,MAAM,SAAAC,GAEHH,EAAS,CACNf,KAAMkB,EACNL,SAAS,SAKtB,CAACpB,IAGIqB,EDnBkBK,CAAc1B,GAAhCO,EAAR,EAAQA,KAAMa,EAAd,EAAcA,QAKR,OACG,qCACI,qBAAIJ,UAAU,oCAAd,cAAoDhB,EAApD,OAEEoB,GAAY,mBAAGJ,UAAU,mCAAb,qBAGb,qBAAKA,UAAU,YAAf,SAIGT,EAAKE,KAAK,SAAAC,GAAG,OACV,cAAC,EAAD,eAEMA,GADCA,EAAIC,aEpBrBgB,EAAe,WAEvB,MAAoCzC,mBAAS,CAAC,gBAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAEF,OACK,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAED,6BAEM2C,EAAWnB,KAAK,SAAAT,GAAQ,OACrB,cAAC,EAAD,CAEAA,SAAWA,GADLA,Y,MCb1B6B,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.89aed55b.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const CategoryAdd = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue(  e.target.value );\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n \r\n        if ( inputValue.trim().length > 2 ) { \r\n             setCategories(cats => [ inputValue, ...cats]);\r\n             setInputValue('');\r\n        }\r\n    }\r\n     return (\r\n        <form onSubmit={ handleSubmit }>\r\n           <input\r\n            type=\"text\"\r\n            value={ inputValue }\r\n            onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n        )\r\n     }\r\n\r\n\r\n   CategoryAdd.propTypes = {\r\n       setCategories: PropTypes.func.isRequired\r\n   }\r\n","\r\n\r\n\r\n\r\n\r\n\r\nexport const getGifs = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=RdNn5SYp5ahpiDtB6cbMbfREhMO4mrop`\r\n    const resp = await fetch( url );\r\n    const { data }  = await resp.json();\r\n \r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n   return gifs;\r\n\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGriditem = ({ title, url }) => {\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={ url } alt={ title } />\r\n            <p> { title } </p> \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { UseFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGriditem } from './GifGriditem';\r\n\r\n \r\nexport const GifGrid = ({ category }) => {\r\n\r\n\r\n   const { data, loading } = UseFetchGifs( category ); \r\n\r\n\r\n\r\n\r\n         return (\r\n            <>\r\n                <h3 className=\"animate__animated animate__bounce\"> {category} </h3>\r\n\r\n                { loading  && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n\r\n            \r\n               { <div className=\"card-grid\">\r\n             \r\n        \r\n                {\r\n                    data.map( img  => (\r\n                       <GifGriditem\r\n                        key={ img.id }\r\n                        { ...img }\r\n                       />\r\n                    ))\r\n                }\r\n              \r\n            </div> }\r\n\r\n        </>\r\n    )\r\n\r\n}","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\n\r\nexport const UseFetchGifs = ( category ) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    }); \r\n\r\n    useEffect( () => {\r\n        \r\n        getGifs( category )\r\n            .then( imgs => {\r\n\r\n                setstate({\r\n                   data: imgs,\r\n                   loading: false\r\n                }); \r\n\r\n\r\n             })\r\n   }, [category])  \r\n\r\n\r\n    return state;\r\n\r\n}","import React, { useState } from 'react'\r\nimport { CategoryAdd } from './components/CategoryAdd';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n     const [categories, setCategories] = useState(['Dragon ball']);\r\n\r\n   return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <CategoryAdd setCategories={ setCategories } />\r\n            <hr />\r\n\r\n           <ol>\r\n              {\r\n                 categories.map( category => (\r\n                    <GifGrid \r\n                    key={ category }\r\n                    category={ category } />\r\n                \r\n             ))\r\n          }\r\n            \r\n        </ol>\r\n    \r\n    </>\r\n    \r\n    )\r\n}\r\n   ","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n    document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}